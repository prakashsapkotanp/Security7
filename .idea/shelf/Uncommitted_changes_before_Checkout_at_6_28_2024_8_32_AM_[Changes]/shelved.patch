Index: springjwtsecurity/src/main/java/com/spring3/oauth/jwt/configurations/SecurityConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.spring3.oauth.jwt.configurations;\r\n\r\nimport com.spring3.oauth.jwt.helpers.UserDetailsServiceImpl;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.security.authentication.AuthenticationManager;\r\nimport org.springframework.security.authentication.dao.DaoAuthenticationProvider;\r\nimport org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;\r\nimport org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;\r\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\r\nimport org.springframework.security.config.http.SessionCreationPolicy;\r\nimport org.springframework.security.core.userdetails.UserDetailsService;\r\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\nimport org.springframework.security.web.SecurityFilterChain;\r\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\r\n\r\n@Configuration\r\n@EnableWebSecurity\r\npublic class SecurityConfig {\r\n\r\n    @Autowired\r\n    private JwtAuthFilter jwtAuthFilter;\r\n\r\n    @Autowired\r\n    private UserDetailsService userDetailsService;\r\n \r\n    @Bean\r\n    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {\r\n        http.csrf().disable()\r\n                .authorizeRequests()\r\n                .requestMatchers(\"/api/v1/user/login\", \"/api/v1/user/signup\", \"/api/v1/refreshToken\").permitAll()\r\n//                .requestMatchers(\"/api/v1/**\").authenticated()\r\n                .requestMatchers(\"/api/v1/user/profile\",\"api/v1/members\").hasAuthority(\"ROLE_USER\") // Allow access to ROLE_USER\r\n                .requestMatchers(\"/api/v1/**\").hasAuthority(\"ROLE_ADMIN\") // Allow access to ROLE_ADMIN\r\n                .and()\r\n                .addFilterBefore(jwtAuthFilter, UsernamePasswordAuthenticationFilter.class);\r\n\r\n        return http.build();\r\n    }\r\n\r\n    @Bean\r\n    public AuthenticationManager authenticationManager(AuthenticationConfiguration authConfig) throws Exception {\r\n        return authConfig.getAuthenticationManager();\r\n    }\r\n\r\n    @Bean\r\n    public DaoAuthenticationProvider authenticationProvider() {\r\n        DaoAuthenticationProvider authProvider = new DaoAuthenticationProvider();\r\n        authProvider.setUserDetailsService(userDetailsService);\r\n        authProvider.setPasswordEncoder(passwordEncoder());\r\n        return authProvider;\r\n    }\r\n\r\n    @Bean\r\n    public PasswordEncoder passwordEncoder() {\r\n        return new BCryptPasswordEncoder();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/configurations/SecurityConfig.java b/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/configurations/SecurityConfig.java
--- a/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/configurations/SecurityConfig.java	(revision bd67883b73188106467f04ca15d8166f12403661)
+++ b/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/configurations/SecurityConfig.java	(date 1719501037488)
@@ -26,13 +26,14 @@
 
     @Autowired
     private UserDetailsService userDetailsService;
- 
     @Bean
     public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
         http.csrf().disable()
+                .sessionManagement()
+                .sessionCreationPolicy(SessionCreationPolicy.STATELESS) // Use stateless sessions
+                .and()
                 .authorizeRequests()
                 .requestMatchers("/api/v1/user/login", "/api/v1/user/signup", "/api/v1/refreshToken").permitAll()
-//                .requestMatchers("/api/v1/**").authenticated()
                 .requestMatchers("/api/v1/user/profile","api/v1/members").hasAuthority("ROLE_USER") // Allow access to ROLE_USER
                 .requestMatchers("/api/v1/**").hasAuthority("ROLE_ADMIN") // Allow access to ROLE_ADMIN
                 .and()
@@ -40,7 +41,6 @@
 
         return http.build();
     }
-
     @Bean
     public AuthenticationManager authenticationManager(AuthenticationConfiguration authConfig) throws Exception {
         return authConfig.getAuthenticationManager();
Index: springjwtsecurity/src/main/java/com/spring3/oauth/jwt/services/RequesterService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.spring3.oauth.jwt.services;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\nimport java.util.stream.Collectors;\r\n\r\nimport org.springframework.scheduling.annotation.Scheduled;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport com.spring3.oauth.jwt.models.RequesterInfo;\r\nimport com.spring3.oauth.jwt.repositories.RequesterRepository;\r\n\r\n\r\n@Service\r\npublic class RequesterService {\r\n\r\n    private final RequesterRepository requesterRepository;\r\n\r\n    public RequesterService(RequesterRepository requesterRepository) {\r\n        this.requesterRepository = requesterRepository;\r\n    }\r\n\r\n    public List<RequesterInfo> getAllRequesters() {\r\n        return requesterRepository.findAll();\r\n    }\r\n\r\n    public Optional<RequesterInfo> getRequesterById(Long id) {\r\n        return requesterRepository.findById(id);\r\n    }\r\n\r\n    public List<RequesterInfo> getRequestersByBloodGroup(String bloodGroup) {\r\n        return requesterRepository.findByBloodGroup(bloodGroup);\r\n    }\r\n\r\n    public List<RequesterInfo> getRequestersByLocation(double latitude, double longitude) {\r\n        return requesterRepository.findByLatitudeAndLongitude(latitude, longitude);\r\n    }\r\n\r\n    public List<RequesterInfo> getRequestersByPhone(Long phone) {\r\n        return requesterRepository.findByPhone(phone);\r\n    }\r\n\r\n    public RequesterInfo saveRequester(RequesterInfo requesterInfo) {\r\n        return requesterRepository.save(requesterInfo);\r\n    }\r\n\r\n    public void deleteRequester(Long id) {\r\n        requesterRepository.deleteById(id);\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/services/RequesterService.java b/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/services/RequesterService.java
--- a/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/services/RequesterService.java	(revision bd67883b73188106467f04ca15d8166f12403661)
+++ b/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/services/RequesterService.java	(date 1719496569886)
@@ -36,8 +36,8 @@
         return requesterRepository.findByLatitudeAndLongitude(latitude, longitude);
     }
 
-    public List<RequesterInfo> getRequestersByPhone(Long phone) {
-        return requesterRepository.findByPhone(phone);
+    public List<RequesterInfo> getRequestersByName(String name) {
+        return requesterRepository.findByName(name);
     }
 
     public RequesterInfo saveRequester(RequesterInfo requesterInfo) {
Index: springjwtsecurity/src/main/java/com/spring3/oauth/jwt/repositories/RequesterRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.spring3.oauth.jwt.repositories;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport com.spring3.oauth.jwt.models.RequesterInfo;\r\n\r\n@Repository\r\npublic interface RequesterRepository extends JpaRepository<RequesterInfo,Long> {\r\n    Optional<RequesterInfo> findById(Long id);\r\n\r\n    List<RequesterInfo> findByBloodGroup(String bloodGroup);\r\n\r\n    List<RequesterInfo> findByLatitudeAndLongitude(double latitude, double longitude);\r\n\r\n    List<RequesterInfo> findByPhone(Long phone);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/repositories/RequesterRepository.java b/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/repositories/RequesterRepository.java
--- a/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/repositories/RequesterRepository.java	(revision bd67883b73188106467f04ca15d8166f12403661)
+++ b/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/repositories/RequesterRepository.java	(date 1719496569895)
@@ -16,5 +16,5 @@
 
     List<RequesterInfo> findByLatitudeAndLongitude(double latitude, double longitude);
 
-    List<RequesterInfo> findByPhone(Long phone);
+    List<RequesterInfo> findByName(String name);
 }
Index: springjwtsecurity/src/main/java/com/spring3/oauth/jwt/models/RequesterInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.spring3.oauth.jwt.models;\r\n\r\nimport jakarta.persistence.CascadeType;\r\nimport jakarta.persistence.Column;\r\nimport jakarta.persistence.Entity;\r\nimport jakarta.persistence.GeneratedValue;\r\nimport jakarta.persistence.GenerationType;\r\nimport jakarta.persistence.Id;\r\nimport jakarta.persistence.JoinColumn;\r\nimport jakarta.persistence.OneToOne;\r\nimport jakarta.persistence.Table;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.ToString;\r\n\r\n@Entity\r\n@Data\r\n@ToString\r\n@NoArgsConstructor\r\n@AllArgsConstructor\r\n@Table(name = \"REQUESTER\")\r\npublic class RequesterInfo {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    @Column(name = \"ID\")\r\n    private Long id;\r\n    private String bloodGroup;\r\n    private int pints;\r\n    private double latitude;\r\n    private double longitude;\r\n    private Long phone;\r\n    @OneToOne(cascade = CascadeType.ALL)\r\n    @JoinColumn(name = \"userId\", referencedColumnName = \"id\")\r\n    private UserInfo userInfo;\r\n    @OneToOne(cascade = CascadeType.ALL)\r\n    @JoinColumn(name = \"locationID\", referencedColumnName = \"id\")\r\n    private MemberLocation memberLocation;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/models/RequesterInfo.java b/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/models/RequesterInfo.java
--- a/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/models/RequesterInfo.java	(revision bd67883b73188106467f04ca15d8166f12403661)
+++ b/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/models/RequesterInfo.java	(date 1719496357522)
@@ -29,7 +29,7 @@
     private int pints;
     private double latitude;
     private double longitude;
-    private Long phone;
+    private String name;
     @OneToOne(cascade = CascadeType.ALL)
     @JoinColumn(name = "userId", referencedColumnName = "id")
     private UserInfo userInfo;
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"7bba4686-5003-44c2-b66d-79176773fd1e\" name=\"Changes\" comment=\"error response dto added\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"prakash-test\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"UPDATE_TYPE\" value=\"REBASE\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;prakashsapkotanp&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/prakashsapkotanp/Security7.git&quot;,\r\n    &quot;accountId&quot;: &quot;af83f326-e9e8-4b03-bfae-6c9899b75790&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2g8UtTmKvw1DsyGQPoOt621lEIx\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,\r\n    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,\r\n    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,\r\n    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;Spring Boot.OauthJwtApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"demo\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"demo\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"OauthJwtApplication\" type=\"SpringBootApplicationConfigurationType\" factoryName=\"Spring Boot\" nameIsGenerated=\"true\">\r\n      <module name=\"oauth-jwt\" />\r\n      <option name=\"SPRING_BOOT_MAIN_CLASS\" value=\"com.spring3.oauth.jwt.OauthJwtApplication\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"7bba4686-5003-44c2-b66d-79176773fd1e\" name=\"Changes\" comment=\"\" />\r\n      <created>1715078912968</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1715078912968</updated>\r\n      <workItem from=\"1715079398482\" duration=\"243000\" />\r\n      <workItem from=\"1715079681524\" duration=\"4476000\" />\r\n      <workItem from=\"1715085120261\" duration=\"2862000\" />\r\n      <workItem from=\"1715096684042\" duration=\"188000\" />\r\n      <workItem from=\"1715147634201\" duration=\"5486000\" />\r\n      <workItem from=\"1715167376980\" duration=\"4325000\" />\r\n      <workItem from=\"1715240367279\" duration=\"6346000\" />\r\n      <workItem from=\"1715247868600\" duration=\"319000\" />\r\n      <workItem from=\"1717151615925\" duration=\"298000\" />\r\n      <workItem from=\"1717151916919\" duration=\"1101000\" />\r\n      <workItem from=\"1717401468878\" duration=\"72000\" />\r\n      <workItem from=\"1717401559233\" duration=\"28000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"signup added and token generated\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1715096810723</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715096810723</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"adjustment added\" />\r\n    <MESSAGE value=\"signup added and token generated\" />\r\n    <MESSAGE value=\"error response dto added\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"error response dto added\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision bd67883b73188106467f04ca15d8166f12403661)
+++ b/.idea/workspace.xml	(date 1719500881203)
@@ -4,7 +4,20 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="7bba4686-5003-44c2-b66d-79176773fd1e" name="Changes" comment="error response dto added" />
+    <list default="true" id="7bba4686-5003-44c2-b66d-79176773fd1e" name="Changes" comment="error response dto added">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/controllers/RequesterController.java" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/controllers/RequesterController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/models/RequesterInfo.java" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/models/RequesterInfo.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/repositories/RequesterRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/repositories/RequesterRepository.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/services/RequesterService.java" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/services/RequesterService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/src/main/resources/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/target/classes/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/target/classes/application.properties" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/target/classes/com/spring3/oauth/jwt/configurations/SecurityConfig.class" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/target/classes/com/spring3/oauth/jwt/configurations/SecurityConfig.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/target/classes/com/spring3/oauth/jwt/controllers/RequesterController.class" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/target/classes/com/spring3/oauth/jwt/controllers/RequesterController.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/target/classes/com/spring3/oauth/jwt/models/RequesterInfo.class" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/target/classes/com/spring3/oauth/jwt/models/RequesterInfo.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/target/classes/com/spring3/oauth/jwt/repositories/RequesterRepository.class" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/target/classes/com/spring3/oauth/jwt/repositories/RequesterRepository.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/springjwtsecurity/target/classes/com/spring3/oauth/jwt/services/RequesterService.class" beforeDir="false" afterPath="$PROJECT_DIR$/springjwtsecurity/target/classes/com/spring3/oauth/jwt/services/RequesterService.class" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -21,7 +34,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="prakash-test" />
+        <entry key="$PROJECT_DIR$" value="main" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -48,26 +61,40 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
-    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
-    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
-    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;Spring Boot.OauthJwtApplication.executor&quot;: &quot;Run&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.OauthJwtApplication.executor": "Debug",
+    "RequestMappingsPanelOrder0": "0",
+    "RequestMappingsPanelOrder1": "1",
+    "RequestMappingsPanelWidth0": "75",
+    "RequestMappingsPanelWidth1": "75",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "Spring Boot.OauthJwtApplication.executor": "Run",
+    "git-widget-placeholder": "prakash",
+    "kotlin-language-version-configured": "true",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
-  <component name="RunManager">
+}]]></component>
+  <component name="RunManager" selected="Application.OauthJwtApplication">
+    <configuration name="OauthJwtApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="com.spring3.oauth.jwt.OauthJwtApplication" />
+      <module name="oauth-jwt" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="com.spring3.oauth.jwt.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration default="true" type="JetRunConfigurationType">
       <module name="demo" />
       <method v="2">
@@ -88,6 +115,11 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.OauthJwtApplication" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -141,4 +173,9 @@
     <MESSAGE value="error response dto added" />
     <option name="LAST_COMMIT_MESSAGE" value="error response dto added" />
   </component>
+  <component name="com.intellij.coverage.CoverageDataManagerImpl">
+    <SUITE FILE_PATH="coverage/backend$OauthJwtApplication.ic" NAME="OauthJwtApplication Coverage Results" MODIFIED="1719495962976" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
+      <FILTER>com.spring3.oauth.jwt.*</FILTER>
+    </SUITE>
+  </component>
 </project>
\ No newline at end of file
Index: springjwtsecurity/src/main/java/com/spring3/oauth/jwt/controllers/RequesterController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.spring3.oauth.jwt.controllers;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.DeleteMapping;\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.PostMapping;\r\nimport org.springframework.web.bind.annotation.RequestBody;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\nimport com.spring3.oauth.jwt.models.RequesterInfo;\r\nimport com.spring3.oauth.jwt.services.RequesterService;\r\n\r\n@RestController\r\n@RequestMapping(\"/api/v1/requesters\")\r\npublic class RequesterController {\r\n    private final RequesterService requesterService;\r\n\r\n    public RequesterController(RequesterService requesterService) {\r\n        this.requesterService = requesterService;\r\n    }\r\n\r\n    @GetMapping\r\n    public List<RequesterInfo> getAllRequesters() {\r\n        return requesterService.getAllRequesters();\r\n    }\r\n\r\n    @GetMapping(\"/{id}\")\r\n    public ResponseEntity<RequesterInfo> getRequesterById(@PathVariable Long id) {\r\n        Optional<RequesterInfo> requesterInfo = requesterService.getRequesterById(id);\r\n        return requesterInfo.map(info -> new ResponseEntity<>(info, HttpStatus.OK))\r\n                .orElseGet(() -> new ResponseEntity<>(HttpStatus.NOT_FOUND));\r\n    }\r\n\r\n    @GetMapping(\"/bloodgroup/{bloodGroup}\")\r\n    public List<RequesterInfo> getRequestersByBloodGroup(@PathVariable String bloodGroup) {\r\n        return requesterService.getRequestersByBloodGroup(bloodGroup);\r\n    }\r\n\r\n    @GetMapping(\"/location/{latitude}/{longitude}\")\r\n    public List<RequesterInfo> getRequestersByLocation(@PathVariable double latitude, @PathVariable double longitude) {\r\n        return requesterService.getRequestersByLocation(latitude, longitude);\r\n    }\r\n\r\n    @GetMapping(\"/phone/{phone}\")\r\n    public List<RequesterInfo> getRequestersByPhone(@PathVariable Long phone) {\r\n        return requesterService.getRequestersByPhone(phone);\r\n    }\r\n\r\n    @PostMapping\r\n    public ResponseEntity<RequesterInfo> saveRequester(@RequestBody RequesterInfo requesterInfo) {\r\n        RequesterInfo savedRequester = requesterService.saveRequester(requesterInfo);\r\n        return new ResponseEntity<>(savedRequester, HttpStatus.CREATED);\r\n    }\r\n\r\n    @DeleteMapping(\"/{id}\")\r\n    public ResponseEntity<Void> deleteRequester(@PathVariable Long id) {\r\n        requesterService.deleteRequester(id);\r\n        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\r\n    }\r\n    \r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/controllers/RequesterController.java b/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/controllers/RequesterController.java
--- a/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/controllers/RequesterController.java	(revision bd67883b73188106467f04ca15d8166f12403661)
+++ b/springjwtsecurity/src/main/java/com/spring3/oauth/jwt/controllers/RequesterController.java	(date 1719500130476)
@@ -47,9 +47,9 @@
         return requesterService.getRequestersByLocation(latitude, longitude);
     }
 
-    @GetMapping("/phone/{phone}")
-    public List<RequesterInfo> getRequestersByPhone(@PathVariable Long phone) {
-        return requesterService.getRequestersByPhone(phone);
+    @GetMapping("/name/{name}")
+    public List<RequesterInfo> getRequestersByPhone(@PathVariable String name) {
+        return requesterService.getRequestersByName(name);
     }
 
     @PostMapping
Index: springjwtsecurity/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.datasource.url=jdbc:mysql://localhost:3306/db_bloodlink\r\nspring.datasource.username=root\r\nspring.datasource.password=Pr@k@sh7890\r\nspring.jpa.show-sql=true\r\nspring.jpa.hibernate.ddl-auto=validate\r\nspring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MySQLDialect\r\nserver.port=8085\r\njwt.signing-key=9d4f804eea09dfff6bb01710fea7dc516bd13e35bb35d1e50273b3f21f550c07a2e68a265c0fad341e35e4508e9bba1657de8e57576742621becc606a7f19b1e\r\n#1 day expiration\r\njwt.expiration=86400000\r\nspring.resources.cache.cachecontrol.no-cache=true
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/springjwtsecurity/src/main/resources/application.properties b/springjwtsecurity/src/main/resources/application.properties
--- a/springjwtsecurity/src/main/resources/application.properties	(revision bd67883b73188106467f04ca15d8166f12403661)
+++ b/springjwtsecurity/src/main/resources/application.properties	(date 1719498077704)
@@ -3,7 +3,7 @@
 spring.datasource.username=root
 spring.datasource.password=Pr@k@sh7890
 spring.jpa.show-sql=true
-spring.jpa.hibernate.ddl-auto=validate
+spring.jpa.hibernate.ddl-auto=update
 spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MySQLDialect
 server.port=8085
 jwt.signing-key=9d4f804eea09dfff6bb01710fea7dc516bd13e35bb35d1e50273b3f21f550c07a2e68a265c0fad341e35e4508e9bba1657de8e57576742621becc606a7f19b1e
Index: springjwtsecurity/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.datasource.url=jdbc:mysql://localhost:3306/db_bloodlink\r\nspring.datasource.username=root\r\nspring.datasource.password=Pr@k@sh7890\r\nspring.jpa.show-sql=true\r\nspring.jpa.hibernate.ddl-auto=validate\r\nspring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MySQLDialect\r\nserver.port=8085\r\njwt.signing-key=9d4f804eea09dfff6bb01710fea7dc516bd13e35bb35d1e50273b3f21f550c07a2e68a265c0fad341e35e4508e9bba1657de8e57576742621becc606a7f19b1e\r\n#1 day expiration\r\njwt.expiration=86400000\r\nspring.resources.cache.cachecontrol.no-cache=true
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/springjwtsecurity/target/classes/application.properties b/springjwtsecurity/target/classes/application.properties
--- a/springjwtsecurity/target/classes/application.properties	(revision bd67883b73188106467f04ca15d8166f12403661)
+++ b/springjwtsecurity/target/classes/application.properties	(date 1719498080104)
@@ -3,7 +3,7 @@
 spring.datasource.username=root
 spring.datasource.password=Pr@k@sh7890
 spring.jpa.show-sql=true
-spring.jpa.hibernate.ddl-auto=validate
+spring.jpa.hibernate.ddl-auto=update
 spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MySQLDialect
 server.port=8085
 jwt.signing-key=9d4f804eea09dfff6bb01710fea7dc516bd13e35bb35d1e50273b3f21f550c07a2e68a265c0fad341e35e4508e9bba1657de8e57576742621becc606a7f19b1e
